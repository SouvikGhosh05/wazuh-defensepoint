version: '3.8'

services:
  # Using Elasticsearch instead of Wazuh indexer to avoid SSL hardcoding issues
  wazuh.indexer:
    image: elasticsearch:7.17.15
    hostname: wazuh.indexer
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "cluster.name=wazuh-cluster"
      - "node.name=wazuh.indexer"
      - "network.host=0.0.0.0"
      - "http.port=9200"
      - "transport.host=localhost"
      - "transport.tcp.port=9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - wazuh_indexer_data:/usr/share/elasticsearch/data
    networks:
      wazuh:
        ipv4_address: 172.20.0.2
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Wazuh manager - simplified health check to avoid blocking
  wazuh.manager:
    image: wazuh/wazuh-manager:4.8.0
    hostname: wazuh.manager
    restart: unless-stopped
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      - INDEXER_URL=http://wazuh.indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=admin
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=DefensePoint2024!API
      - WAZUH_CLUSTER_NODE_NAME=wazuh-manager-01
      - WAZUH_CLUSTER_NODE_TYPE=master
      - WAZUH_CLUSTER_KEY=c98b62a9b6169ac5f67dae55ae4a9088
    volumes:
      - wazuh_api_configuration:/var/ossec/api/configuration
      - wazuh_etc:/var/ossec/etc
      - wazuh_logs:/var/ossec/logs
      - wazuh_queue:/var/ossec/queue
      - wazuh_var_multigroups:/var/ossec/var/multigroups
      - wazuh_integrations:/var/ossec/integrations
      - wazuh_active_response:/var/ossec/active-response/bin
      - wazuh_agentless:/var/ossec/agentless
      - wazuh_wodles:/var/ossec/wodles
      - filebeat_etc:/etc/filebeat
      - filebeat_var:/var/lib/filebeat
    depends_on:
      wazuh.indexer:
        condition: service_healthy
    networks:
      wazuh:
        ipv4_address: 172.20.0.3
    # Simplified health check - just check if container is running
    healthcheck:
      test: ["CMD-SHELL", "pgrep wazuh-managerd || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # Dashboard - no dependencies to avoid blocking, starts independently
  wazuh.dashboard:
    image: wazuh/wazuh-dashboard:4.8.0
    hostname: wazuh.dashboard
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=admin
      - WAZUH_API_URL=http://wazuh.manager
      - DASHBOARD_USERNAME=kibanaserver
      - DASHBOARD_PASSWORD=kibanaserver
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=DefensePoint2024!API
      - OPENSEARCH_HOSTS=["http://wazuh.indexer:9200"]
      - OPENSEARCH_SSL_VERIFICATIONMODE=none
    volumes:
      - wazuh_dashboard_config:/usr/share/wazuh-dashboard/data/wazuh/config
      - wazuh_dashboard_custom:/usr/share/wazuh-dashboard/plugins
    networks:
      wazuh:
        ipv4_address: 172.20.0.4
    # Generous health check settings
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601 || exit 1"]
      interval: 45s
      timeout: 20s
      retries: 8
      start_period: 300s
    # No dependencies - let it start independently

  # Nginx proxy with fallback for dashboard unavailability
  nginx-proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - wazuh
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # No dependencies - start immediately for ALB health

networks:
  wazuh:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  wazuh_api_configuration:
  wazuh_etc:
  wazuh_logs:
  wazuh_queue:
  wazuh_var_multigroups:
  wazuh_integrations:
  wazuh_active_response:
  wazuh_agentless:
  wazuh_wodles:
  filebeat_etc:
  filebeat_var:
  wazuh_indexer_data:
  wazuh_dashboard_config:
  wazuh_dashboard_custom: